name: 'Get & Cache Dependencies'
description: 'Get the dependencies (via npm) and cache them.'
inputs:
  cachingOnOrOff:
    description: 'Whether to cache dependencies or not'
    required: false
    default: 'true'
outputs:
  used-cache:
    description: 'Whether the cache was used.'
    value: ${{ steps.install-deps.outputs.my-cache}}
runs:
    using: 'composite'
    steps:
      - name: Cache dependencies
        if: inputs.cachingOnOrOff == 'true'
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        id: install-deps
        if: steps.cache.outputs.cache-hit != 'true' || inputs.cachingOnOrOff != 'true' #If we dont want to use caching then this step should execute
        run: |
          npm ci
          echo "::set-output name=my-cache::'${{ inputs.cachingOnOrOff }}'"
        shell: bash #When using run, we need to add shell: